// <auto-generated />
using System;
using GUI_Project;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GUI_Project.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0-preview.6.23329.4");

            modelBuilder.Entity("GUI_Project.Model.AddDoctorPageCls", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConsultingHour")
                        .HasColumnType("TEXT");

                    b.Property<string>("DoctorAddress")
                        .HasColumnType("TEXT");

                    b.Property<int>("DoctorAge")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DoctorContactNo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DoctorDept")
                        .HasColumnType("TEXT");

                    b.Property<int>("DoctorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DoctorName")
                        .HasColumnType("TEXT");

                    b.Property<int>("DoctorPassword")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DoctorSpcl")
                        .HasColumnType("TEXT");

                    b.Property<string>("JoinDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("addDoctorPageCls");
                });

            modelBuilder.Entity("GUI_Project.Model.AddMedicineCls", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BuyingPrice")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CompanyContactNo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompanyName")
                        .HasColumnType("TEXT");

                    b.Property<string>("DiseaseName")
                        .HasColumnType("TEXT");

                    b.Property<string>("DiseaseType")
                        .HasColumnType("TEXT");

                    b.Property<string>("MedicineDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("MedicineName")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quanity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SellingPrice")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("addMedicineCls");
                });

            modelBuilder.Entity("GUI_Project.Model.AddStaffClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("StaffAddress")
                        .HasColumnType("TEXT");

                    b.Property<int>("StaffAge")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StaffBloodGroup")
                        .HasColumnType("TEXT");

                    b.Property<string>("StaffContactNo")
                        .HasColumnType("TEXT");

                    b.Property<int>("StaffId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StaffJoiningDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("StaffName")
                        .HasColumnType("TEXT");

                    b.Property<int>("StaffPassword")
                        .HasColumnType("INTEGER");

                    b.Property<string>("post")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("addStaffCls");
                });

            modelBuilder.Entity("GUI_Project.Model.AddTestCls", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DiseaseName")
                        .HasColumnType("TEXT");

                    b.Property<string>("DiseaseType")
                        .HasColumnType("TEXT");

                    b.Property<int>("TestCost")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TestName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("addTestCls");
                });

            modelBuilder.Entity("GUI_Project.Model.AdmitPatientPageCls", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<int>("BedNo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BedType")
                        .HasColumnType("TEXT");

                    b.Property<string>("BloodGroup")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ContactNo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Dept")
                        .HasColumnType("TEXT");

                    b.Property<string>("Disease")
                        .HasColumnType("TEXT");

                    b.Property<string>("DoctorName")
                        .HasColumnType("TEXT");

                    b.Property<int>("PatientAge")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PatientName")
                        .HasColumnType("TEXT");

                    b.Property<string>("TimeOfAdmission")
                        .HasColumnType("TEXT");

                    b.Property<int>("Ward")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AdmitPatientPageCls");
                });

            modelBuilder.Entity("GUI_Project.Model.ComboBoxDiseaseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("comboBoxDiseaseTypes");
                });

            modelBuilder.Entity("GUI_Project.Model.CreateAdminCLs", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdminName")
                        .HasColumnType("TEXT");

                    b.Property<string>("AdminPassword")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("AdminCLs");
                });

            modelBuilder.Entity("GUI_Project.Model.CreateUserCls", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserPassword")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("UserCls");
                });

            modelBuilder.Entity("GUI_Project.Model.NewFolder.ComboBoxBloodGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("comboBoxBloodGroups");
                });

            modelBuilder.Entity("GUI_Project.Model.NewFolder.ComboBoxDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("comboBoxDepartments");
                });

            modelBuilder.Entity("GUI_Project.Model.NewFolder.ComboBoxDiseaseName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("comboBoxDiseaseNames");
                });

            modelBuilder.Entity("GUI_Project.Model.NewFolder.ReleasePatientClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<int>("BedCost")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BedType")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ContactNo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DateOfAdmission")
                        .HasColumnType("TEXT");

                    b.Property<string>("DateOfRelease")
                        .HasColumnType("TEXT");

                    b.Property<string>("Disease")
                        .HasColumnType("TEXT");

                    b.Property<string>("DoctorName")
                        .HasColumnType("TEXT");

                    b.Property<int>("MedicineCost")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NoOfDays")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PatientAge")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PatientName")
                        .HasColumnType("TEXT");

                    b.Property<int>("TestCost")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalCost")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("releasePatientClasses");
                });

            modelBuilder.Entity("GUI_Project.Model.SupplierCls", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompanyName")
                        .HasColumnType("TEXT");

                    b.Property<int>("ContactNo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductType")
                        .HasColumnType("TEXT");

                    b.Property<int>("PurchasePrice")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PurchasedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("QuanityPurchased")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SellingPrice")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("supplierCls");
                });

            modelBuilder.Entity("GUI_Project.RegistrationCls", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("DOB")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("MemberShip")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mobile")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Sex")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("registrations");
                });

            modelBuilder.Entity("GUI_Project.RegistrationCls2", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdmittedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discease")
                        .HasColumnType("TEXT");

                    b.Property<string>("DischargeDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DoctorIncharge")
                        .HasColumnType("TEXT");

                    b.Property<string>("DoctorNote")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoomNo")
                        .HasColumnType("TEXT");

                    b.Property<string>("WardNo")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("registration_2s");
                });
#pragma warning restore 612, 618
        }
    }
}
